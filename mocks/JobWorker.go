// Code generated by mockery 2.7.5. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"

	workers "github.com/jr2df69/workers"
)

// JobWorker is an autogenerated mock type for the JobWorker type
type JobWorker struct {
	mock.Mock
}

// CurrentJob provides a mock function with given fields:
func (_m *JobWorker) CurrentJob() workers.Job {
	ret := _m.Called()

	var r0 workers.Job
	if rf, ok := ret.Get(0).(func() workers.Job); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(workers.Job)
		}
	}

	return r0
}

// FinishedAt provides a mock function with given fields:
func (_m *JobWorker) FinishedAt() time.Time {
	ret := _m.Called()

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

// RunWith provides a mock function with given fields: job
func (_m *JobWorker) RunWith(job workers.Job) error {
	ret := _m.Called(job)

	var r0 error
	if rf, ok := ret.Get(0).(func(workers.Job) error); ok {
		r0 = rf(job)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Running provides a mock function with given fields:
func (_m *JobWorker) Running() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// StartedAt provides a mock function with given fields:
func (_m *JobWorker) StartedAt() time.Time {
	ret := _m.Called()

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}
